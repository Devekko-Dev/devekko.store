defmodule Store.Repo.Migrations.CreateSellerProduct do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:sellers, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :slug, :text, null: false
      add :first_name, :text, null: false
      add :last_name, :text, null: false
      add :street1, :text, null: false
      add :street2, :text
      add :city, :text, null: false
      add :state, :text, null: false
      add :zip, :text, null: false
      add :country, :text, null: false
      add :notes, :text
      add :x, :text
      add :facebook, :text
      add :instagram, :text
      add :domain, :text
      add :email, :text, null: false
      add :phone, :text
      add :status, :text, null: false
      add :role, :text, null: false
      add :stripe_id, :text, null: false

      add :inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")
    end

    create table(:products, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :sku, :text, null: false
      add :name, :text, null: false
      add :slug, :text, null: false
      add :subtitle, :text
      add :description, :text, null: false
      add :featured_image, :text, null: false
      add :images, :map
      add :featured, :boolean, null: false
      add :order, :bigint
      add :stripe_id, :text, null: false
      add :price, :decimal, null: false

      add :inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :seller_id,
          references(:sellers,
            column: :id,
            name: "products_seller_id_fkey",
            type: :uuid,
            prefix: "public"
          )
    end
  end

  def down do
    drop constraint(:products, "products_seller_id_fkey")

    drop table(:products)

    drop table(:sellers)
  end
end
